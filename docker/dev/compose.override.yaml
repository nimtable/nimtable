services:
  nimtable:
    build:
      context: .
      dockerfile: Dockerfile
      target: nimtable-backend-runtime
    # optional. Using this, you can use pg on localhost like: 
    # jdbc:postgresql://host.docker.internal:5432/nimtable_db
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      nimtable-network:
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
  nimtable-web:
    build:
      context: ../../
      dockerfile: docker/dev/Dockerfile
      target: nimtable-frontend-runtime
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ../../src:/app/src
      - ../../public:/app/public
    networks:
      nimtable-network:

  database:
    volumes:
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  spark-iceberg:
    image: tabulario/spark-iceberg
    container_name: spark-iceberg
    networks:
      nimtable-network:
    depends_on:
      - rest
      - minio
    volumes:
      - ./warehouse:/home/iceberg/warehouse
      - ./test-data:/home/iceberg/test-data
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    ports:
      - 8888:8888
      - 8080:8080
      - 10000:10000
      - 10001:10001
  rest:
    build:
      context: .
      dockerfile: Dockerfile
      target: rest
    container_name: iceberg-rest
    depends_on:
      database:
        condition: service_healthy
    networks:
      nimtable-network:
    ports:
      - 8181:8181
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
      - CATALOG_CATALOG__IMPL=org.apache.iceberg.jdbc.JdbcCatalog
      - CATALOG_URI=jdbc:postgresql://database:5432/restcatalog?user=nimtable_user&password=password
  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    networks:
      nimtable-network:
        aliases:
          - warehouse.minio
    ports:
      - 9001:9001
      - 9000:9000
    command: ["server", "/data", "--console-address", ":9001"]
  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    networks:
      nimtable-network:
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc anonymous set public minio/warehouse;
      tail -f /dev/null
      "

